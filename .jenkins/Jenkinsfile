pipeline {
  agent any
  environment {
    IMAGE_NAME = "globe-app"
    CONTAINER_NAME = "globe-running"
    BACKUP_IMAGE = "globe-app:backup"
  }
  stages {
    stage('Clone Repository') {
      steps {
        git branch: 'master', url: 'https://github.com/Bharath-Bhandaru/restapi-proj.git'
      }
    }
    stage('Backup Current Image') {
      steps {
        script {
          sh "docker tag $IMAGE_NAME:latest $BACKUP_IMAGE || true"
        }
      }
    }
    stage('Build Docker Image') {
      steps {
        // Build the frontend image
        sh 'docker build -t $IMAGE_NAME:latest ./my-globe-app'
      }
    }
    stage('Integration Test') {
      steps {
        // Run basic tests to verify the build
        script {
          sh "docker run --rm $IMAGE_NAME:latest nginx -t"
        }
      }
    }
    stage('Deploy Services') {
      steps {
        script {
          // Stop and remove existing containers
          sh "docker-compose down || true"
          
          // Start all services defined in docker-compose
          sh "docker-compose up -d"
        }
      }
    }
    stage('Verify Deployment') {
      steps {
        // Wait for services to be ready
        sh "sleep 10"
        
        // Basic health check
        sh "curl -s http://localhost:5000/health || curl -s http://localhost:80/index.html || true"
      }
    }
  }
  post {
    success {
      echo "✅ Deployment successful!"
      archiveArtifacts artifacts: '**/*.log', allowEmptyArchive: true
    }
    failure {
      echo "❌ Build or deployment failed. Rolling back..."
      sh """
        docker-compose down || true
        docker run -d --name $CONTAINER_NAME -p 80:80 $BACKUP_IMAGE || true
      """
    }
  }
}
